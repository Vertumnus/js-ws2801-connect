/*! ws2801-connect 15-07-2017 */

var sleep=require("sleep");class WS2801{constructor(t,r){this.count=t,this.spiWrite="function"==typeof r?r:function(){}}static assert(t,r){if(!t)throw r}set count(t){WS2801.assert(t>0,"Only natural numbers are valid"),this.rgbLights=Array(3*t),this.clear()}get count(){return this.rgbLights.length/3}static rgbFrom(t){switch(t.length){case 1:return WS2801.rgbFromOne(t[0]);case 3:return t;default:WS2801.assert(!1,"Wrong number of arguments")}}static rgbFromOne(t){if(Array.isArray(t))return WS2801.rgbFrom(t);if("string"==typeof t){let r="#"==t[0]?t.slice(1):t,s=parseInt(r.substr(0,2),16),e=parseInt(r.substr(2,2),16),i=parseInt(r.substr(4,2),16);return[s,e,i]}WS2801.assert(!1,"Wrong argument")}setLight(t,...r){WS2801.assert(t>=0&&t<this.count,"Given Number is out of range");let s,e,i;return[s,e,i]=WS2801.rgbFrom(r),this.rgbLights[3*t+0]=255&s,this.rgbLights[3*t+1]=255&e,this.rgbLights[3*t+2]=255&i,this}*[Symbol.iterator](){for(let t=0,r=this.count;t<r;++t)yield[this.rgbLights[3*t+0],this.rgbLights[3*t+1],this.rgbLights[3*t+2]]}show(){return this.spiWrite(this.rgbLights),sleep.usleep(600),this}clear(){return this.rgbLights.fill(0),this}fill(...t){let r=WS2801.rgbFrom(t);return this.rgbLights.forEach(function(t,s,e){e[s]=r[s%3]}),this}}module.exports=WS2801;