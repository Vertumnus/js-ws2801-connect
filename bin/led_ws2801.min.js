/*! led_ws2801 08-07-2017 */

var sleep=require("sleep");class LED_WS2801{constructor(t,s){this.assert(s.write,"SPI interface must have function write"),this.count=t,this.spi=s}assert(t,s){if(!t)throw s}set count(t){this.assert(t>0,"Only natural numbers are valid"),this.rgbLights=Array(3*t),this.clear()}get count(){return this.rgbLights.length/3}static rgbFrom(t){let s,r,e;switch(t.length){case 1:if("string"==typeof t[0]){let i="#"==t[0][0]?t[0].slice(1):t[0];return s=parseInt(i.substr(0,2),16),r=parseInt(i.substr(2,2),16),e=parseInt(i.substr(4,2),16),[s,r,e]}if(Array.isArray(t[0])&&3==t[0].length)return t[0];this.assert(!1,"Wrong arguments");break;case 3:return t;default:this.assert(!1,"Wrong number of arguments")}return[0,0,0]}setLight(t,...s){this.assert(t>=0&&t<this.count,"Given Number is out of range");let r,e,i;return[r,e,i]=LED_WS2801.rgbFrom(s),this.rgbLights[3*t+0]=255&r,this.rgbLights[3*t+1]=255&e,this.rgbLights[3*t+2]=255&i,this}*[Symbol.iterator](){for(let t=0,s=this.count;t<s;++t)yield[this.rgbLights[3*t+0],this.rgbLights[3*t+1],this.rgbLights[3*t+2]]}show(){return this.spi.write(this.rgbLights),sleep.usleep(600),this}clear(){return this.rgbLights.fill(0),this}fill(...t){let s=LED_WS2801.rgbFrom(t);return this.rgbLights.forEach(function(t,r,e){e[r]=s[r%3]}),this}}module.exports=LED_WS2801;