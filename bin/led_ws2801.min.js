/*! led_ws2801 22-06-2017 */

var sleep=require("sleep");class LED_WS2801{constructor(t,r){console.assert(t>0,"Only natural numbers are valid"),console.assert(r.write,"SPI interface must have function write"),this.count=t,this.spi=r}set count(t){this.rgbLights=Array(3*t)}get count(){return this.rgbLights.length/3}static rgbFrom(t){let r,s,i;switch(t.length){case 1:let e="#"==t[0][0]?t[0].slice(1):t[0];return r=parseInt(e.substr(0,2),16),s=parseInt(e.substr(2,2),16),i=parseInt(e.substr(4,2),16),[r,s,i];case 3:return t;default:return console.error("Wrong number of arguments"),[0,0,0]}}setLight(t,...r){let s,i,e;return[s,i,e]=LED_WS2801.rgbFrom(r),this.rgbLights[3*t+0]=255&s,this.rgbLights[3*t+1]=255&i,this.rgbLights[3*t+2]=255&e,this}[Symbol.iterator](){var t=this;return function*(){for(;0<t.count;)yield[t.rgbLights[0],t.rgbLights[1],t.rgbLights[2]]}}show(){return this.spi.write(this.rgbLights),sleep.usleep(600),this}clear(){return this.rgbLights.fill(0),this}fill(...t){let r=LED_WS2801.rgbFrom(t);return this.rgbLights.forEach(function(t,s,i){i[s]=r[s%3]}),this}}module.exports=LED_WS2801;